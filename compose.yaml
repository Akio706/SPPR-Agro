services:
  python-root:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: python-root
    restart: unless-stopped
    init: true
    # env_file: .env  # Uncomment if .env file exists in project root
    ports:
      - "8080:8080"  # Expose app on port 8080
    depends_on:
      - postgres
    networks:
      - backend
    # The app expects DATABASE_URL for PostgreSQL, see README for details
    environment:
      # Set DATABASE_URL to use the internal postgres service by default
      DATABASE_URL: postgresql+psycopg2://postgres:postgres@postgres:5432/postgres

  python-nicegui:
    build:
      context: ./niceGUI
      dockerfile: ../niceGUIDockerfile
    container_name: python-nicegui
    restart: unless-stopped
    init: true
    # env_file: ./niceGUI/.env  # Uncomment if .env file exists in niceGUI/
    ports:
      - "8081:8080"  # Expose niceGUI app on a different host port
    depends_on:
      - postgres
    networks:
      - backend
    environment:
      # Set DATABASE_URL to use the internal postgres service by default
      DATABASE_URL: postgresql+psycopg2://postgres:postgres@postgres:5432/postgres

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend
    volumes:
      - pgdata:/var/lib/postgresql/data

networks:
  backend:
    driver: bridge

volumes:
  pgdata:
    # Persistent storage for PostgreSQL
