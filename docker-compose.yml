# Volumes #####################################################################
volumes:
  frost_db_data:
    # external: true
  dbbackups:
    # external: true


# Networks ####################################################################
networks:
  net:
    driver: bridge

services:
  frost-db:
    container_name: frost_db
    image: "kartoza/postgis:${FROST_DB_VERSION:?FROST_DB_VERSION not set}"
    ports:
     - 5432:5432
    networks:
      - net
    shm_size: '1gb'
    environment:
      POSTGRES_DB: "${FROST_DB_NAME:?FROST_DB_NAME not set}"
      POSTGRES_USER: "${FROST_DB_USER:?FROST_DB_USER not set}"
      POSTGRES_PASSWORD: "${FROST_DB_PASSWORD:?FROST_DB_PASSWORD not set}"
      POSTGRES_GROUP_NAME: "${FROST_DB_GROUP_NAME:?FROST_DB_GROUP_NAME not set}"
      POSTGRES_MULTIPLE_EXTENSIONS: "${FROST_DB_EXTENSIONS:?FROST_DB_EXTENSIONS not set}"
      PGDATA: "/var/lib/postgresql/data/pgdata"
      PGUSER: "${FROST_DB_USER:?FROST_DB_USER not set}"
      REPLICATION: "false"
      IGNORE_INIT_HOOK_LOCKFILE: "false"
      PASSWORD_AUTHENTICATION: "md5"
      RUN_AS_ROOT: "true"
    volumes:
     - frost_db_data:/var/lib/postgresql/data
      - .:/app 
    restart: on-failure
    healthcheck:
      test: "PGPASSWORD=${FROST_DB_PASSWORD:?FROST_DB_PASSWORD not set} pg_isready -h 127.0.0.1 -U ${FROST_DB_USER:?FROST_DB_USER not set} -d ${FROST_DB_NAME:?FROST_DB_NAME not set}"
      interval: 10s
      timeout: 5s
      retries: 5
  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_CONFIG_SERVER_MODE=${PGADMIN_CONFIG_SERVER_MODE}
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=${PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED}
      - PGADMIN_LISTEN_PORT=5050
      - SCRIPT_NAME=${PGADMIN_SUBPATH:?PGADMIN_SUBPATH not set}
      - PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION=${PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION:?PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION not set}
      - PGADMIN_CONFIG_WTF_CSRF_CHECK_DEFAULT=${PGADMIN_CONFIG_WTF_CSRF_CHECK_DEFAULT:?PGADMIN_CONFIG_WTF_CSRF_CHECK_DEFAULT not set}
      - PGADMIN_CONFIG_WTF_CSRF_ENABLED=${PGADMIN_CONFIG_WTF_CSRF_ENABLED:?PGADMIN_CONFIG_WTF_CSRF_ENABLED not set}
    entrypoint: /bin/sh -c "chmod 600 /pgpass; /entrypoint.sh;"
    user: root
    ports:
     - 5050:5050
    networks:
     - net
    configs:
      - source: servers.json
        target: c/servers.json
      - source: pgpass
        target: /pgpass
    tty: true
  app:
    build: .
    ports:
      - "8080:8080"
    environment:
         DATABASE_URL: postgresql+psycopg2://agro:agro_pass@db:5432/agrofields
    depends_on:
      - frost-db
    networks:
     - net
configs:
  pgpass:
    content: ${FROST_DB_CONTNAME:?FROST_DB_CONTNAME not set}:5432:*:${FROST_DB_USER:?FROST_DB_USER not set}:${FROST_DB_PASSWORD:?FROST_DB_PASSWORD not set}
  servers.json:
    content: |
      {"Servers": {"1": {
        "Group": "Servers",
        "Name": "My Local Postgres 16.1",
        "Host": "${FROST_DB_CONTNAME:?FROST_DB_CONTNAME not set}",
        "Port": 5432,
        "MaintenanceDB": "postgres",
        "Username": "${FROST_DB_USER:?FROST_DB_USER not set}",
        "PassFile": "/pgpass",
        "SSLMode": "prefer"
      }}}